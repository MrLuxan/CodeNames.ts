{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/BoradCodec.ts","src/Game.ts","src/Init.ts","src/UIElements/Board.ts","src/UIElements/BoardMenu.ts","src/UIElements/Card.ts","src/UIElements/Menu.ts","src/UIElements/SpyMasterMenu.ts","src/UIElements/UiElement.ts","src/UiElements/SpyMaterQrcode.ts","src/UiElements/UIElement.ts","src/WordList.ts","src/enums.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","enums_1","Card_1","WordList_1","BoardCodec","prototype","ToString","game","wordOrder","typeOrder","Cards","card","wordIndex","Words","indexOf","Word","this","Pad","toString","CardType","parseInt","num","size","temp","FromString","stringVal","cards","slice","wordIndexArray","match","typecount","word","cardTypeNumber","push","Card","Board","StartingTeam","eCardType","RedSpy","BlueSpy","Board_1","SpyMaterQrcode_1","BoradCodec_1","Menu_1","CodeNamesGame","GetSpyMasterUrl","SpyMasterUrlBase","GameEncode","Run","spyMasterCode","ReadGETdata","SpyMaster","LoadSpyMaster","NewGame","MainMenu","Menu","Render","document","body","style","backgroundImage","lookingFor","window","location","href","map","params","split","pair","Math","floor","random","cardOrder","BuildArray","Neutral","Assassin","ShuffleArray","randomNumbers","randomnumber","SpyMaterQrcode","cardData","cardPack","_i","cardData_1","j","_a","_super","UiElement_1","UiElement","__extends","outputElement","DomElement","htmlToElement","append","playArea","querySelector","Game","Click","_this","BoardMenu","NewGameClick","reload","CopyCodeButton","el","createElement","value","appendChild","select","execCommand","removeChild","menuInsertElement","bottomInsertElement","menu","addEventListener","menuQR","qrOutput","getElementsByClassName","QRCode","text","width","height","colorDark","colorLight","correctLevel","CorrectLevel","H","quiteZone","mainMenu","GameBoard","CheckMarkCard","ToggledColor","bgColor","color","backgroundColor","checkMark","display","html","cardType","board","BoardMenu_1","SpyMasterMenu_1","MenuButtonClick","dataset","open","transform","classList","toggle","menuInsertDiv","extraInsertDiv","SpyMasterMenu","queryId","template","innerHTML","trim","content","firstChild","UIElement_1","ReadyButtonClick","parentNode"],"mappings":"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ACA,QACA,SACA,WACA,SACA,QACA,SACA,WACA,SACA,QACA,UACA,OACA,QACA,MACA,MACA,QACA,YACA,OACA,aACA,WACA,MACA,SACA,SACA,QACA,OACA,aACA,MACA,YACA,cACA,MACA,KACA,UACA,OACA,UACA,QACA,QACA,WACA,UACA,cACA,OACA,QACA,OACA,UACA,QACA,QACA,YACA,SACA,SACA,OACA,QACA,QACA,YACA,QACA,OACA,QACA,OACA,UACA,MACA,OACA,UACA,UACA,WACA,OACA,cACA,YACA,eACA,OACA,OACA,OACA,WACA,MACA,QACA,MACA,SACA,SACA,QACA,QACA,YACA,OACA,SACA,QACA,QACA,OACA,UACA,UACA,OACA,MACA,OACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,aACA,SACA,QACA,YACA,QACA,QACA,SACA,MACA,WACA,OACA,WACA,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,QACA,QACA,cACA,WACA,WACA,MACA,MACA,SACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,UACA,MACA,QACA,OACA,QACA,QACA,YACA,SACA,UACA,SACA,OACA,QACA,UACA,MACA,OACA,WACA,UACA,aACA,QACA,UACA,SACA,MACA,QACA,UACA,MACA,OACA,WACA,WACA,UACA,YACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,OACA,UACA,SACA,WACA,MACA,SACA,cACA,OACA,UACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,OACA,QACA,SACA,MACA,UACA,OACA,OACA,SACA,cACA,OACA,QACA,MACA,QACA,WACA,QACA,QACA,aACA,MACA,OACA,OACA,SACA,WACA,OACA,YACA,QACA,OACA,MACA,QACA,YACA,MACA,aACA,SACA,SACA,OACA,MACA,MACA,UACA,MACA,cACA,SACA,WACA,aACA,SACA,QACA,MACA,OACA,QACA,QACA,QACA,MACA,MACA,MACA,UACA,OACA,MACA,SACA,WACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,OACA,SACA,UACA,MACA,WACA,MACA,QACA,UACA,MACA,OACA,YACA,OACA,MACA,SACA,QACA,YACA,WACA,QACA,aACA,OACA,OACA,SACA,MACA,WACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,OACA,OACA,SACA,OACA,aACA,OACA,WACA,OACA,SACA,YACA,OACA,UACA,SACA,OACA,MACA,SACA,QACA,UACA,UACA,QACA,OACA,MACA,OACA,aACA,WACA,QACA,QACA,MACA,QACA,OACA,SACA,YACA,WACA,OACA,UACA,QACA,QACA,YACA,OACA,MACA,cACA,SACA,MACA,MACA,WACA,SACA,SACA,QACA,QACA,WACA,QACA,UACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,WACA,SACA,OACA,OACA,MACA,SACA,WACA,QACA,QACA,SACA,WACA,cACA,QACA,aACA,QACA,SACA,SACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,OACA,QACA,QACA,WACA,aACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,OACA,WACA,aACA,YACA,WACA,OACA,WACA,gBACA,aACA,eACA,YACA,OACA,SACA,QACA,OACA,SACA,aACA,QACA,YACA,QACA,OACA,QACA,OACA,MACA,UACA,YACA,SACA,MACA,UACA,MACA,SACA,gBACA,YACA,MACA,SACA,MACA,OACA,SACA,OACA,OACA,QACA,aACA,OACA,OACA,MACA,MACA,OACA,SACA,OACA,UACA,aACA,WACA,OACA,YACA,OACA,SACA,SACA,YACA,WACA,QACA,WACA,SACA,WACA,UACA,MACA,QACA,UACA,UACA,QACA,QACA,SACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,aACA,SACA,MACA,QACA,UACA,MACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,OACA,UACA,OACA,QACA,QACA,WACA,SACA,OACA,SACA,QACA,QACA,SACA,YACA,MACA,SACA,SACA,SACA,WACA,OACA,QACA,QACA,cACA,YACA,QACA,QACA,WACA,QACA,SACA,aACA,SACA,UACA,MACA,UACA,QACA,QACA,QACA,UACA,WACA,QACA,aACA,OACA,OACA,UACA,SACA,WACA,YACA,MACA,SACA,QACA,QACA,SACA,UACA,UACA,OACA,QACA,OACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,OACA,aACA,UACA,aACA,UACA,QACA,QACA,WACA,OACA,WACA,OACA,QACA,MACA,OACA,QACA,aACA,QACA,OACA,eACA,OACA,aACA,UACA,OACA,SACA,MACA,QACA,aACA,MACA,UACA,OACA,SACA,WACA,aACA,WACA,QACA,UACA,QACA,MACA,OACA,WACA,SACA,OACA,OACA,OACA,QACA,OACA,aACA,YACA,UACA,MACA,OACA,SACA,OACA,6CCjqBH,IAAYwB,oDAAAA,EAAAzC,EAAAyC,YAAAzC,EAAAyC,UAAS,KAAGA,EAAA,OAAA,GAAA,SAAQA,EAAAA,EAAA,QAAA,GAAA,UAASA,EAAAA,EAAA,QAAA,GAAA,UAASA,EAAAA,EAAA,SAAA,GAAA","file":"CodeNames.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {CodeNamesGame} from \"./Game\"\r\nimport { eCardType } from \"./enums\";\r\nimport { Card } from \"./UIElements/Card\";\r\nimport { Words } from \"./WordList\"; \r\n\r\nexport class BoardCodec\r\n{\r\n    ToString(game :CodeNamesGame) : string \r\n    {\r\n        let wordOrder: string = \"\"; \r\n        let typeOrder: string = \"\"; \r\n\r\n        for(let i = 0; i < game.Cards.length; i++){\r\n            let card : Card = game.Cards[i];\r\n\r\n            let wordIndex : number = Words.indexOf(card.Word);\r\n            wordOrder += this.Pad(wordIndex.toString(36),2);\r\n\r\n            typeOrder += card.CardType.toString();\r\n        }\r\n\r\n        typeOrder = parseInt(typeOrder, 4).toString(36);\r\n        return wordOrder + typeOrder;\r\n    }\r\n\r\n    Pad(num: string, size: number): string{\r\n        let temp : string = num;\r\n        while (temp.length < size) temp = \"0\" + temp;\r\n        return temp;\r\n    }\r\n\r\n    FromString(game :CodeNamesGame, stringVal :string)\r\n    {\r\n        let startingTeam: eCardType;\r\n        let cards: Array<Card> = [];\r\n        \r\n        let wordOrder: string = stringVal.slice(0, 50); \r\n        let typeOrder: string = stringVal.slice(50); \r\n\r\n        typeOrder = this.Pad(parseInt(typeOrder,36).toString(4),25);\r\n\r\n        let wordIndexArray :Array<string> = wordOrder.match(/.{1,2}/g);\r\n\r\n        let typecount : number = 0;\r\n\r\n        for(let i = 0; i < wordIndexArray.length; i++)\r\n        {\r\n            let word = Words[parseInt(wordIndexArray[i],36)];\r\n            let cardTypeNumber : number = parseInt(typeOrder[i]);\r\n            typecount += cardTypeNumber;\r\n\r\n            cards.push(new Card(word,<eCardType>cardTypeNumber,game.Board));\r\n        }\r\n\r\n        game.Cards = cards;\r\n        game.StartingTeam = (typecount == 25 ? eCardType.RedSpy : eCardType.BlueSpy); // 25 red 26 blue\r\n    }\r\n}","import { eCardType } from \"./enums\";\r\nimport { Words } from \"./WordList\";\r\nimport { Board } from \"./UIElements/Board\";\r\nimport { Card } from \"./UIElements/Card\";\r\nimport { SpyMaterQrcode } from \"./UiElements/SpyMaterQrcode\"\r\nimport { BoardCodec } from \"./BoradCodec\";\r\nimport { Menu } from \"./UIElements/Menu\";\r\n\r\nexport class CodeNamesGame\r\n{\r\n    StartingTeam: eCardType;\r\n    Cards: Array<Card> = [];\r\n    Board: Board;\r\n    SpyMaster: boolean = false;\r\n    MainMenu: Menu;\r\n\r\n    SpyMasterUrlBase : string = \"https://mrluxan.github.io/CodeNames.ts/?SM=\";\r\n    GameEncode : string = \"\";\r\n\r\n    GetSpyMasterUrl() : string\r\n    {\r\n        return this.SpyMasterUrlBase + this.GameEncode;\r\n    }\r\n\r\n    Run()\r\n    {\r\n        let spyMasterCode : string = this.ReadGETdata(\"SM\");\r\n        this.SpyMaster = spyMasterCode != null; \r\n\r\n        if(!this.SpyMaster){\r\n            this.NewGame();\r\n        }\r\n        else{\r\n            this.LoadSpyMaster(spyMasterCode);\r\n        }\r\n\r\n        this.MainMenu = new Menu(this);\r\n        this.MainMenu.Render(document.body);\r\n\r\n        document.body.style.backgroundImage = `url(\"./images/bg${(this.StartingTeam == eCardType.RedSpy ? \"red\" : \"blue\")}.png\")`;\r\n    }\r\n\r\n    ReadGETdata(lookingFor : string) : string\r\n    {           \r\n        interface IDictionary {\r\n            [key: string]: string;\r\n        };\r\n\r\n        if(window.location.href.indexOf('?') > 0)\r\n        {\r\n            let map :IDictionary = {};\r\n            let getData : string = window.location.href.split( \"?\" )[1];\r\n            let params : Array<string> = getData.split( \"&\" );\r\n            for(var i = 0; i < params.length; i++)\r\n            {\r\n                let pair : string[] = params[i].split( \"=\" );\r\n                map[pair[0]] = pair[1];\r\n            }\r\n    \r\n            return(map[lookingFor]);\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n\r\n    NewGame()\r\n    {\r\n        this.StartingTeam = Math.floor(Math.random() * 2) == 1 ? eCardType.RedSpy : eCardType.BlueSpy;\r\n\r\n        let cardOrder: Array<eCardType> = this.BuildArray([[eCardType.Neutral,7],\r\n                                                           [eCardType.RedSpy,8],\r\n                                                           [eCardType.BlueSpy,8],\r\n                                                           [eCardType.Assassin,1],\r\n                                                           [this.StartingTeam,1]]);\r\n        \r\n        this.ShuffleArray(cardOrder);\r\n\r\n        let randomNumbers: Array<number> = [];\r\n        while (randomNumbers.length < cardOrder.length)\r\n        {\r\n            let randomnumber = Math.floor(Math.random() * Words.length);\r\n            if (randomNumbers.indexOf(randomnumber) > -1) continue;\r\n                randomNumbers[randomNumbers.length] = randomnumber;\r\n        }\r\n\r\n        this.Board = new Board(this);\r\n\r\n        for (let i = 0; i < cardOrder.length; i++)\r\n            this.Cards.push(new Card(Words[randomNumbers[i]], cardOrder[i], this.Board));\r\n    \r\n        this.Board.Render(document.body);\r\n\r\n        this.GameEncode = new BoardCodec().ToString(this);\r\n        new SpyMaterQrcode(this).Render(document.body);\r\n    }\r\n\r\n    LoadSpyMaster(spyMasterCode : string)\r\n    {\r\n        this.Board = new Board(this);\r\n        new BoardCodec().FromString(this, spyMasterCode);\r\n        this.Board.Render(document.body);\r\n    }\r\n\r\n    BuildArray(cardData :Array<Array<eCardType|number>>) : Array<eCardType>\r\n    {\r\n        let cardPack:Array<eCardType> = [];\r\n\r\n        for (let pair of cardData)\r\n        {\r\n            for(let i = 0 ; i < pair[1]; i++)\r\n            {\r\n                cardPack.push(pair[0]);\r\n            }\r\n        }\r\n\r\n        return cardPack;\r\n    }\r\n\r\n    ShuffleArray(a:Array<eCardType>) : Array<eCardType> {\r\n        for (let i = a.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [a[i], a[j]] = [a[j], a[i]];\r\n        }\r\n        return a;\r\n    }\r\n}","import {CodeNamesGame} from  \"./Game\";\r\nnew CodeNamesGame().Run();","import { eCardType } from \"../enums\"\r\nimport { UiElement} from \"./UiElement\"\r\nimport { CodeNamesGame } from \"../Game\";\r\n\r\nexport class Board extends UiElement {\r\n\r\n    Game: CodeNamesGame;\r\n    \r\n    constructor(game: CodeNamesGame)\r\n    {\r\n        super();\r\n        this.Game = game;\r\n    }\r\n    \r\n    Render(outputElement: HTMLElement)\r\n    {\r\n        let html :string = `<div class=\"Board\"><div class=\"PlayArea\"></div></div>`;\r\n        this.DomElement = this.htmlToElement(html);\r\n        outputElement.append(this.DomElement);\r\n\r\n        let playArea : HTMLElement = this.DomElement.querySelector(\".PlayArea\");\r\n        \r\n        for(let i =0; i < this.Game.Cards.length; i++)\r\n        {\r\n            this.Game.Cards[i].Render(playArea);\r\n\r\n            if(this.Game.SpyMaster)\r\n                this.Game.Cards[i].Click();\r\n        }\r\n    }\r\n}","import { eCardType } from \"../enums\"\r\nimport { UiElement } from \"./UiElement\";\r\nimport { Menu } from \"./Menu\";\r\n\r\ndeclare var QRCode: any;\r\n\r\nexport class BoardMenu  extends UiElement {\r\n\r\n    MainMenu : Menu;\r\n\r\n    constructor(mainMenu : Menu)\r\n    {\r\n        super();\r\n        this.MainMenu = mainMenu;\r\n    }\r\n\r\n    NewGameClick()\r\n    {\r\n        location.reload();\r\n    }\r\n\r\n    CopyCodeButton()\r\n    {\r\n        const el = document.createElement('textarea');\r\n        el.value = this.MainMenu.Game.GetSpyMasterUrl();\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    Render(menuInsertElement: HTMLElement, bottomInsertElement: HTMLElement)\r\n    {\r\n        let menuhtml :string = `<ul>\r\n                                <li id=\"NewGameItem\">New game</li>\r\n                            </ul>`;\r\n        let menu = this.htmlToElement(menuhtml);        \r\n        menuInsertElement.appendChild(menu);\r\n\r\n        menu.querySelector('#NewGameItem').addEventListener(\"click\", (e:Event) => this.NewGameClick());\r\n\r\n\r\n        let menuQRhtml :string = `<div class=\"BoardMenuExtras\">\r\n                                    <div class=\"Qrcode\"></div>\r\n                                    <button class=\"CopyCodeButton\">Copy code</button>\r\n                                 </div>`;\r\n        let menuQR = this.htmlToElement(menuQRhtml); \r\n        let qrOutput = menuQR.getElementsByClassName('Qrcode')[0];\r\n\r\n        new QRCode(qrOutput, {\r\n            text: this.MainMenu.Game.GetSpyMasterUrl(),\r\n            width: 150,\r\n            height: 150,\r\n            colorDark : \"#000000\",\r\n            colorLight : \"#ffffff\",\r\n            correctLevel : QRCode.CorrectLevel.H,\r\n            quiteZone : 10\r\n        });\r\n        \r\n        menuQR.querySelector('.CopyCodeButton').addEventListener(\"click\", (e:Event) => this.CopyCodeButton());\r\n\r\n        bottomInsertElement.appendChild(menuQR);\r\n    }\r\n}","import { eCardType } from \"../enums\"\r\nimport { UiElement } from \"./UiElement\";\r\nimport { Board } from \"./Board\"\r\n\r\n\r\nexport class Card  extends UiElement {\r\n    Word: string;\r\n    CardType: eCardType;\r\n    GameBoard: Board\r\n\r\n    constructor(word: string, cardType: eCardType, board: Board)\r\n    {\r\n        super();\r\n        this.Word = word;\r\n        this.CardType = cardType;\r\n        this.GameBoard = board;\r\n    }\r\n\r\n    Click()\r\n    {\r\n        if(!this.GameBoard.Game.SpyMaster)\r\n            this.ToggledColor();\r\n        else\r\n            this.CheckMarkCard();\r\n    }\r\n\r\n    ToggledColor()\r\n    {\r\n        let bgColor: string;\r\n        switch (this.CardType)\r\n        {\r\n            case eCardType.Assassin: bgColor = \"Black\"; break;\r\n            case eCardType.Neutral: bgColor = \"Gray\"; break;\r\n            case eCardType.RedSpy: bgColor = \"Red\"; break;\r\n            case eCardType.BlueSpy: bgColor = \"Blue\"; break;\r\n        }\r\n\r\n        this.DomElement.style.color = \"#FFF\";\r\n        this.DomElement.style.backgroundColor = bgColor;\r\n    }\r\n\r\n    CheckMarkCard()\r\n    {\r\n        let checkMark = <HTMLElement>this.DomElement.querySelector('.CheckMark');\r\n        checkMark.style.display = (checkMark.style.display == \"none\" ? \"block\" : \"none\");\r\n    }\r\n\r\n    Render(outputElement: HTMLElement)\r\n    {\r\n        let html :string = `<div class=\"Card\"><div>${this.Word}</div><div>${this.Word}</div><div class=\"CheckMark\">&#10003;</div></div>`;\r\n        this.DomElement = this.htmlToElement(html);\r\n        outputElement.appendChild(this.DomElement);\r\n\r\n        this.DomElement.addEventListener('click', (e:Event) => this.Click());\r\n\r\n\r\n        if(this.GameBoard.Game.SpyMaster)\r\n        {\r\n            this.ToggledColor();\r\n        }\r\n    }\r\n}","import { UiElement } from \"./UiElement\";\r\nimport {CodeNamesGame } from \"../Game\"\r\nimport { BoardMenu } from \"./BoardMenu\";\r\nimport { SpyMasterMenu } from \"./SpyMasterMenu\"; \r\n\r\nexport class Menu  extends UiElement {\r\n\r\n    Game:CodeNamesGame;\r\n\r\n    constructor(game:CodeNamesGame)\r\n    {\r\n        super();\r\n        this.Game = game;\r\n    }\r\n\r\n    MenuButtonClick()\r\n    {   \r\n        if(this.DomElement.dataset.open != \"true\")\r\n        {\r\n            this.DomElement.dataset.open = \"true\";\r\n            (<HTMLElement>this.DomElement.querySelector(\".TopBar\")).style.transform = \"rotate(-45deg)\";\r\n            (<HTMLElement>this.DomElement.querySelector(\".ButtonBar\")).style.transform = \"rotate(45deg)\";\r\n        }\r\n        else\r\n        {\r\n            this.DomElement.dataset.open = \"false\";\r\n            (<HTMLElement>this.DomElement.querySelector(\".TopBar\")).style.transform = \"rotate(45deg)\";\r\n            (<HTMLElement>this.DomElement.querySelector(\".ButtonBar\")).style.transform = \"rotate(-45deg)\";\r\n        }\r\n\r\n\r\n        this.DomElement.classList.toggle(\"MenuHidden\");\r\n        this.DomElement.classList.toggle(\"TopBar\");     \r\n    }\r\n\r\n    Render(outputElement: HTMLElement)\r\n    {\r\n        let html :string = `<div data-open=\"false\" class=\"Menu MenuTransform MenuHidden\">\r\n                                <div class=\"MenuPanel\">\r\n                                    Menu\r\n                                    <div class=\"MenuInsert\"></div>\r\n                                    <div class=\"Info\">\r\n                                        <div class=\"MenuExtra\"></div>\r\n                                        <div class=\"version\">v 0.8</div>\r\n                                    </div>\r\n                                </div>\r\n                                <button title=\"Menu\" class=\"MenuButton\">\r\n                                    <div class=\"InnerButton\">\r\n                                        <div class=\"TopBar MenuTransform\"></div>\r\n                                        <div class=\"ButtonBar MenuTransform\"></div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>`;\r\n        this.DomElement = this.htmlToElement(html);        \r\n        outputElement.appendChild(this.DomElement);\r\n\r\n        let menuInsertDiv = <HTMLElement>this.DomElement.querySelector('.MenuInsert');\r\n        let extraInsertDiv = <HTMLElement>this.DomElement.querySelector('.MenuExtra');\r\n\r\n        if(!this.Game.SpyMaster){\r\n            new BoardMenu(this).Render(menuInsertDiv,extraInsertDiv);\r\n        }\r\n        else{\r\n            new SpyMasterMenu(this).Render(menuInsertDiv)\r\n        }\r\n\r\n        this.DomElement.querySelector('.MenuButton').addEventListener(\"click\", (e:Event) => this.MenuButtonClick());\r\n    }\r\n}","import { UiElement } from \"./UiElement\";\r\nimport { Menu } from \"./Menu\";\r\nimport { eCardType } from \"../enums\"\r\nimport { Card } from \"./Card\";\r\n\r\ndeclare var QRCode: any;\r\n\r\nexport class SpyMasterMenu  extends UiElement {\r\n\r\n    MainMenu : Menu;\r\n\r\n    constructor(mainMenu : Menu)\r\n    {\r\n        super();\r\n        this.MainMenu = mainMenu;\r\n    }\r\n\r\n    Render(menuInsertElement: HTMLElement, bottomInsertElement: HTMLElement = null ) \r\n    {\r\n        let menuhtml :string = `<div class=\"SpyMasterTypeGrid\">\r\n                                    <div>Red<ul class=\"redList\"></ul></div> \r\n                                    <div>Bule<ul class=\"blueList\"></ul></div>\r\n                                    <div>Neutral<ul class=\"neutralList\"></ul></div>\r\n                                    <div>Assassin<ul class=\"assassinList\"></ul></div>\r\n                               </div>`;\r\n        this.DomElement = this.htmlToElement(menuhtml);        \r\n        \r\n        let redCards: Array<Card>;\r\n        let blueCards: Array<Card>;\r\n        let neutralCards: Array<Card>;\r\n        let assassinCards: Card; \r\n\r\n        for(let i = 0; i < this.MainMenu.Game.Cards.length; i++)\r\n        {\r\n            let queryId : string;\r\n\r\n            switch(this.MainMenu.Game.Cards[i].CardType)\r\n            {\r\n                case eCardType.RedSpy: queryId = '.redList'; break;\r\n                case eCardType.BlueSpy: queryId = '.blueList'; break;\r\n                case eCardType.Neutral: queryId = '.neutralList'; break;\r\n                case eCardType.Assassin: queryId = '.assassinList'; break;\r\n            }\r\n\r\n            this.DomElement.querySelector(queryId)\r\n                           .appendChild(this.htmlToElement(`<li>${this.MainMenu.Game.Cards[i].Word}</li>`))\r\n        }\r\n        \r\n        menuInsertElement.appendChild(this.DomElement);\r\n    }\r\n}","export class UiElement {\r\n\r\n    DomElement: HTMLElement;\r\n\r\n    htmlToElement(html : string) : HTMLElement{\r\n        let template = document.createElement('template'); \r\n        template.innerHTML = html.trim();\r\n        return <HTMLElement>template.content.firstChild;\r\n    }\r\n}","import {UiElement} from \"./UIElement\"\r\nimport {CodeNamesGame} from \"../Game\"\r\nimport { BoardCodec } from \"../BoradCodec\";\r\n\r\ndeclare var QRCode: any;\r\n\r\nexport class SpyMaterQrcode extends UiElement {\r\n\r\n    Game:CodeNamesGame;\r\n    \r\n    constructor(game:CodeNamesGame){\r\n        super();\r\n        this.Game = game;\r\n    }\r\n\r\n    CopyCodeButton()\r\n    {\r\n        const el = document.createElement('textarea');\r\n        el.value = this.Game.GetSpyMasterUrl();\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n    \r\n    ReadyButtonClick()\r\n    {\r\n        this.DomElement.parentNode.removeChild(this.DomElement);\r\n    }\r\n\r\n    Render(outputElement: HTMLElement)\r\n    {\r\n        let html :string = `<div class=\"SpyMasterOverlay\">\r\n                                <div class=\"SpyMaterQrcode\">\r\n                                    <div class=\"Qrcode\"></div>\r\n                                    <div class=\"ButtonDiv\">\r\n                                        <button class=\"CopyCodeButton\">Copy code</button>\r\n                                        <button class=\"ReadyButton\">Ready</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>`;\r\n\r\n        this.DomElement = this.htmlToElement(html);\r\n        outputElement.append(this.DomElement);\r\n\r\n        let qrOutput = this.DomElement.getElementsByClassName('Qrcode')[0];\r\n\r\n        new QRCode(qrOutput, {\r\n            text: this.Game.GetSpyMasterUrl(),\r\n            width: 150,\r\n            height: 150,\r\n            colorDark : \"#000000\",\r\n            colorLight : \"#ffffff\",\r\n            correctLevel : QRCode.CorrectLevel.H,\r\n            quiteZone : 10\r\n        });\r\n    \r\n        this.DomElement.querySelector('.CopyCodeButton').addEventListener('click', (e:Event) => this.CopyCodeButton());\r\n        this.DomElement.querySelector('.ReadyButton').addEventListener('click', (e:Event) => this.ReadyButtonClick());    \r\n    }\r\n\r\n}","export class UiElement {\r\n\r\n    DomElement: HTMLElement;\r\n\r\n    htmlToElement(html : string) : HTMLElement{\r\n        let template = document.createElement('template'); \r\n        template.innerHTML = html.trim();\r\n        return <HTMLElement>template.content.firstChild;\r\n    }\r\n}","export let Words: Array<string> = [\r\n   \"Acne\",\r\n   \"Acre\",\r\n   \"Addendum\",\r\n   \"Advertise\",\r\n   \"Aircraft\",\r\n   \"Aisle\",\r\n   \"Alligator\",\r\n   \"Alphabetize\",\r\n   \"America\",\r\n   \"Ankle\",\r\n   \"Apathy\",\r\n   \"Applause\",\r\n   \"Applesauc\",\r\n   \"Application\",\r\n   \"Archaeologist\",\r\n   \"Aristocrat\",\r\n   \"Arm\",\r\n   \"Armada\",\r\n   \"Asleep\",\r\n   \"Astronaut\",\r\n   \"Athlete\",\r\n   \"Atlantis\",\r\n   \"Aunt\",\r\n   \"Avocado\",\r\n   \"Baby-Sitter\",\r\n   \"Backbone\",\r\n   \"Bag\",\r\n   \"Baguette\",\r\n   \"Bald\",\r\n   \"Balloon\",\r\n   \"Banana\",\r\n   \"Banister\",\r\n   \"Baseball\",\r\n   \"Baseboards\",\r\n   \"Basketball\",\r\n   \"Bat\",\r\n   \"Battery\",\r\n   \"Beach\",\r\n   \"Beanstalk\",\r\n   \"Bedbug\",\r\n   \"Beer\",\r\n   \"Beethoven\",\r\n   \"Belt\",\r\n   \"Bib\",\r\n   \"Bicycle\",\r\n   \"Big\",\r\n   \"Bike\",\r\n   \"Billboard\",\r\n   \"Bird\",\r\n   \"Birthday\",\r\n   \"Bite\",\r\n   \"Blacksmith\",\r\n   \"Blanket\",\r\n   \"Bleach\",\r\n   \"Blimp\",\r\n   \"Blossom\",\r\n   \"Blueprint\",\r\n   \"Blunt\",\r\n   \"Blur\",\r\n   \"Boa\",\r\n   \"Boat\",\r\n   \"Bob\",\r\n   \"Bobsled\",\r\n   \"Body\",\r\n   \"Bomb\",\r\n   \"Bonnet\",\r\n   \"Book\",\r\n   \"Booth\",\r\n   \"Bowtie\",\r\n   \"Box\",\r\n   \"Boy\",\r\n   \"Brainstorm\",\r\n   \"Brand\",\r\n   \"Brave\",\r\n   \"Bride\",\r\n   \"Bridge\",\r\n   \"Broccoli\",\r\n   \"Broken\",\r\n   \"Broom\",\r\n   \"Bruise\",\r\n   \"Brunette\",\r\n   \"Bubble\",\r\n   \"Buddy\",\r\n   \"Buffalo\",\r\n   \"Bulb\",\r\n   \"Bunny\",\r\n   \"Bus\",\r\n   \"Buy\",\r\n   \"Cabin\",\r\n   \"Cafeteria\",\r\n   \"Cake\",\r\n   \"Calculator\",\r\n   \"Campsite\",\r\n   \"Can\",\r\n   \"Canada\",\r\n   \"Candle\",\r\n   \"Candy\",\r\n   \"Cape\",\r\n   \"Capitalism\",\r\n   \"Car\",\r\n   \"Cardboard\",\r\n   \"Cartography\",\r\n   \"Cat\",\r\n   \"Cd\",\r\n   \"Ceiling\",\r\n   \"Cell\",\r\n   \"Century\",\r\n   \"Chair\",\r\n   \"Chalk\",\r\n   \"Champion\",\r\n   \"Charger\",\r\n   \"Cheerleader\",\r\n   \"Chef\",\r\n   \"Chess\",\r\n   \"Chew\",\r\n   \"Chicken\",\r\n   \"Chime\",\r\n   \"China\",\r\n   \"Chocolate\",\r\n   \"Church\",\r\n   \"Circus\",\r\n   \"Clay\",\r\n   \"Cliff\",\r\n   \"Cloak\",\r\n   \"Clockwork\",\r\n   \"Clown\",\r\n   \"Clue\",\r\n   \"Coach\",\r\n   \"Coal\",\r\n   \"Coaster\",\r\n   \"Cog\",\r\n   \"Cold\",\r\n   \"College\",\r\n   \"Comfort\",\r\n   \"Computer\",\r\n   \"Cone\",\r\n   \"Constrictor\",\r\n   \"Continuum\",\r\n   \"Conversation\",\r\n   \"Cook\",\r\n   \"Coop\",\r\n   \"Cord\",\r\n   \"Corduroy\",\r\n   \"Cot\",\r\n   \"Cough\",\r\n   \"Cow\",\r\n   \"Cowboy\",\r\n   \"Crayon\",\r\n   \"Cream\",\r\n   \"Crisp\",\r\n   \"Criticize\",\r\n   \"Crow\",\r\n   \"Cruise\",\r\n   \"Crumb\",\r\n   \"Crust\",\r\n   \"Cuff\",\r\n   \"Curtain\",\r\n   \"Cuticle\",\r\n   \"Czar\",\r\n   \"Dad\",\r\n   \"Dart\",\r\n   \"Dawn\",\r\n   \"Day\",\r\n   \"Deep\",\r\n   \"Defect\",\r\n   \"Dent\",\r\n   \"Dentist\",\r\n   \"Desk\",\r\n   \"Dictionary\",\r\n   \"Dimple\",\r\n   \"Dirty\",\r\n   \"Dismantle\",\r\n   \"Ditch\",\r\n   \"Diver\",\r\n   \"Doctor\",\r\n   \"Dog\",\r\n   \"Doghouse\",\r\n   \"Doll\",\r\n   \"Dominoes\",\r\n   \"Door\",\r\n   \"Dot\",\r\n   \"Drain\",\r\n   \"Draw\",\r\n   \"Dream\",\r\n   \"Dress\",\r\n   \"Drink\",\r\n   \"Drip\",\r\n   \"Drums\",\r\n   \"Dryer\",\r\n   \"Duck\",\r\n   \"Dump\",\r\n   \"Dunk\",\r\n   \"Dust\",\r\n   \"Ear\",\r\n   \"Eat\",\r\n   \"Ebony\",\r\n   \"Elbow\",\r\n   \"Electricity\",\r\n   \"Elephant\",\r\n   \"Elevator\",\r\n   \"Elf\",\r\n   \"Elm\",\r\n   \"Engine\",\r\n   \"England\",\r\n   \"Ergonomic\",\r\n   \"Escalator\",\r\n   \"Eureka\",\r\n   \"Europe\",\r\n   \"Evolution\",\r\n   \"Extension\",\r\n   \"Eyebrow\",\r\n   \"Fan\",\r\n   \"Fancy\",\r\n   \"Fast\",\r\n   \"Feast\",\r\n   \"Fence\",\r\n   \"Feudalism\",\r\n   \"Fiddle\",\r\n   \"Figment\",\r\n   \"Finger\",\r\n   \"Fire\",\r\n   \"First\",\r\n   \"Fishing\",\r\n   \"Fix\",\r\n   \"Fizz\",\r\n   \"Flagpole\",\r\n   \"Flannel\",\r\n   \"Flashlight\",\r\n   \"Flock\",\r\n   \"Flotsam\",\r\n   \"Flower\",\r\n   \"Flu\",\r\n   \"Flush\",\r\n   \"Flutter\",\r\n   \"Fog\",\r\n   \"Foil\",\r\n   \"Football\",\r\n   \"Forehead\",\r\n   \"Forever\",\r\n   \"Fortnight\",\r\n   \"France\",\r\n   \"Freckle\",\r\n   \"Freight\",\r\n   \"Fringe\",\r\n   \"Frog\",\r\n   \"Frown\",\r\n   \"Gallop\",\r\n   \"Game\",\r\n   \"Garbage\",\r\n   \"Garden\",\r\n   \"Gasoline\",\r\n   \"Gem\",\r\n   \"Ginger\",\r\n   \"Gingerbread\",\r\n   \"Girl\",\r\n   \"Glasses\",\r\n   \"Goblin\",\r\n   \"Gold\",\r\n   \"Goodbye\",\r\n   \"Grandpa\",\r\n   \"Grape\",\r\n   \"Grass\",\r\n   \"Gratitude\",\r\n   \"Gray\",\r\n   \"Green\",\r\n   \"Guitar\",\r\n   \"Gum\",\r\n   \"Gumball\",\r\n   \"Hair\",\r\n   \"Half\",\r\n   \"Handle\",\r\n   \"Handwriting\",\r\n   \"Hang\",\r\n   \"Happy\",\r\n   \"Hat\",\r\n   \"Hatch\",\r\n   \"Headache\",\r\n   \"Heart\",\r\n   \"Hedge\",\r\n   \"Helicopter\",\r\n   \"Hem\",\r\n   \"Hide\",\r\n   \"Hill\",\r\n   \"Hockey\",\r\n   \"Homework\",\r\n   \"Honk\",\r\n   \"Hopscotch\",\r\n   \"Horse\",\r\n   \"Hose\",\r\n   \"Hot\",\r\n   \"House\",\r\n   \"Houseboat\",\r\n   \"Hug\",\r\n   \"Humidifier\",\r\n   \"Hungry\",\r\n   \"Hurdle\",\r\n   \"Hurt\",\r\n   \"Hut\",\r\n   \"Ice\",\r\n   \"Implode\",\r\n   \"Inn\",\r\n   \"Inquisition\",\r\n   \"Intern\",\r\n   \"Internet\",\r\n   \"Invitation\",\r\n   \"Ironic\",\r\n   \"Ivory\",\r\n   \"Ivy\",\r\n   \"Jade\",\r\n   \"Japan\",\r\n   \"Jeans\",\r\n   \"Jelly\",\r\n   \"Jet\",\r\n   \"Jig\",\r\n   \"Jog\",\r\n   \"Journal\",\r\n   \"Jump\",\r\n   \"Key\",\r\n   \"Killer\",\r\n   \"Kilogram\",\r\n   \"King\",\r\n   \"Kitchen\",\r\n   \"Kite\",\r\n   \"Knee\",\r\n   \"Kneel\",\r\n   \"Knife\",\r\n   \"Knight\",\r\n   \"Koala\",\r\n   \"Lace\",\r\n   \"Ladder\",\r\n   \"Ladybug\",\r\n   \"Lag\",\r\n   \"Landfill\",\r\n   \"Lap\",\r\n   \"Laugh\",\r\n   \"Laundry\",\r\n   \"Law\",\r\n   \"Lawn\",\r\n   \"Lawnmower\",\r\n   \"Leak\",\r\n   \"Leg\",\r\n   \"Letter\",\r\n   \"Level\",\r\n   \"Lifestyle\",\r\n   \"Ligament\",\r\n   \"Light\",\r\n   \"Lightsaber\",\r\n   \"Lime\",\r\n   \"Lion\",\r\n   \"Lizard\",\r\n   \"Log\",\r\n   \"Loiterer\",\r\n   \"Lollipop\",\r\n   \"Loveseat\",\r\n   \"Loyalty\",\r\n   \"Lunch\",\r\n   \"Lunchbox\",\r\n   \"Lyrics\",\r\n   \"Machine\",\r\n   \"Macho\",\r\n   \"Mailbox\",\r\n   \"Mammoth\",\r\n   \"Mark\",\r\n   \"Mars\",\r\n   \"Mascot\",\r\n   \"Mast\",\r\n   \"Matchstick\",\r\n   \"Mate\",\r\n   \"Mattress\",\r\n   \"Mess\",\r\n   \"Mexico\",\r\n   \"Midsummer\",\r\n   \"Mine\",\r\n   \"Mistake\",\r\n   \"Modern\",\r\n   \"Mold\",\r\n   \"Mom\",\r\n   \"Monday\",\r\n   \"Money\",\r\n   \"Monitor\",\r\n   \"Monster\",\r\n   \"Mooch\",\r\n   \"Moon\",\r\n   \"Mop\",\r\n   \"Moth\",\r\n   \"Motorcycle\",\r\n   \"Mountain\",\r\n   \"Mouse\",\r\n   \"Mower\",\r\n   \"Mud\",\r\n   \"Music\",\r\n   \"Mute\",\r\n   \"Nature\",\r\n   \"Negotiate\",\r\n   \"Neighbor\",\r\n   \"Nest\",\r\n   \"Neutron\",\r\n   \"Niece\",\r\n   \"Night\",\r\n   \"Nightmare\",\r\n   \"Nose\",\r\n   \"Oar\",\r\n   \"Observatory\",\r\n   \"Office\",\r\n   \"Oil\",\r\n   \"Old\",\r\n   \"Olympian\",\r\n   \"Opaque\",\r\n   \"Opener\",\r\n   \"Orbit\",\r\n   \"Organ\",\r\n   \"Organize\",\r\n   \"Outer\",\r\n   \"Outside\",\r\n   \"Ovation\",\r\n   \"Overture\",\r\n   \"Pail\",\r\n   \"Paint\",\r\n   \"Pajamas\",\r\n   \"Palace\",\r\n   \"Pants\",\r\n   \"Paper\",\r\n   \"Paper\",\r\n   \"Park\",\r\n   \"Parody\",\r\n   \"Party\",\r\n   \"Password\",\r\n   \"Pastry\",\r\n   \"Pawn\",\r\n   \"Pear\",\r\n   \"Pen\",\r\n   \"Pencil\",\r\n   \"Pendulum\",\r\n   \"Penis\",\r\n   \"Penny\",\r\n   \"Pepper\",\r\n   \"Personal\",\r\n   \"Philosopher\",\r\n   \"Phone\",\r\n   \"Photograph\",\r\n   \"Piano\",\r\n   \"Picnic\",\r\n   \"Pigpen\",\r\n   \"Pillow\",\r\n   \"Pilot\",\r\n   \"Pinch\",\r\n   \"Ping\",\r\n   \"Pinwheel\",\r\n   \"Pirate\",\r\n   \"Plaid\",\r\n   \"Plan\",\r\n   \"Plank\",\r\n   \"Plate\",\r\n   \"Platypus\",\r\n   \"Playground\",\r\n   \"Plow\",\r\n   \"Plumber\",\r\n   \"Pocket\",\r\n   \"Poem\",\r\n   \"Point\",\r\n   \"Pole\",\r\n   \"Pomp\",\r\n   \"Pong\",\r\n   \"Pool\",\r\n   \"Popsicle\",\r\n   \"Population\",\r\n   \"Portfolio\",\r\n   \"Positive\",\r\n   \"Post\",\r\n   \"Princess\",\r\n   \"Procrastinate\",\r\n   \"Protestant\",\r\n   \"Psychologist\",\r\n   \"Publisher\",\r\n   \"Punk\",\r\n   \"Puppet\",\r\n   \"Puppy\",\r\n   \"Push\",\r\n   \"Puzzle\",\r\n   \"Quarantine\",\r\n   \"Queen\",\r\n   \"Quicksand\",\r\n   \"Quiet\",\r\n   \"Race\",\r\n   \"Radio\",\r\n   \"Raft\",\r\n   \"Rag\",\r\n   \"Rainbow\",\r\n   \"Rainwater\",\r\n   \"Random\",\r\n   \"Ray\",\r\n   \"Recycle\",\r\n   \"Red\",\r\n   \"Regret\",\r\n   \"Reimbursement\",\r\n   \"Retaliate\",\r\n   \"Rib\",\r\n   \"Riddle\",\r\n   \"Rim\",\r\n   \"Rink\",\r\n   \"Roller\",\r\n   \"Room\",\r\n   \"Rose\",\r\n   \"Round\",\r\n   \"Roundabout\",\r\n   \"Rung\",\r\n   \"Runt\",\r\n   \"Rut\",\r\n   \"Sad\",\r\n   \"Safe\",\r\n   \"Salmon\",\r\n   \"Salt\",\r\n   \"Sandbox\",\r\n   \"Sandcastle\",\r\n   \"Sandwich\",\r\n   \"Sash\",\r\n   \"Satellite\",\r\n   \"Scar\",\r\n   \"Scared\",\r\n   \"School\",\r\n   \"Scoundrel\",\r\n   \"Scramble\",\r\n   \"Scuff\",\r\n   \"Seashell\",\r\n   \"Season\",\r\n   \"Sentence\",\r\n   \"Sequins\",\r\n   \"Set\",\r\n   \"Shaft\",\r\n   \"Shallow\",\r\n   \"Shampoo\",\r\n   \"Shark\",\r\n   \"Sheep\",\r\n   \"Sheets\",\r\n   \"Sheriff\",\r\n   \"Shipwreck\",\r\n   \"Shirt\",\r\n   \"Shoelace\",\r\n   \"Short\",\r\n   \"Shower\",\r\n   \"Shrink\",\r\n   \"Sick\",\r\n   \"Siesta\",\r\n   \"Silhouette\",\r\n   \"Singer\",\r\n   \"Sip\",\r\n   \"Skate\",\r\n   \"Skating\",\r\n   \"Ski\",\r\n   \"Slam\",\r\n   \"Sleep\",\r\n   \"Sling\",\r\n   \"Slow\",\r\n   \"Slump\",\r\n   \"Smith\",\r\n   \"Sneeze\",\r\n   \"Snow\",\r\n   \"Snuggle\",\r\n   \"Song\",\r\n   \"Space\",\r\n   \"Spare\",\r\n   \"Speakers\",\r\n   \"Spider\",\r\n   \"Spit\",\r\n   \"Sponge\",\r\n   \"Spool\",\r\n   \"Spoon\",\r\n   \"Spring\",\r\n   \"Sprinkler\",\r\n   \"Spy\",\r\n   \"Square\",\r\n   \"Squint\",\r\n   \"Stairs\",\r\n   \"Standing\",\r\n   \"Star\",\r\n   \"State\",\r\n   \"Stick\",\r\n   \"Stockholder\",\r\n   \"Stoplight\",\r\n   \"Stout\",\r\n   \"Stove\",\r\n   \"Stowaway\",\r\n   \"Straw\",\r\n   \"Stream\",\r\n   \"Streamline\",\r\n   \"Stripe\",\r\n   \"Student\",\r\n   \"Sun\",\r\n   \"Sunburn\",\r\n   \"Sushi\",\r\n   \"Swamp\",\r\n   \"Swarm\",\r\n   \"Sweater\",\r\n   \"Swimming\",\r\n   \"Swing\",\r\n   \"Tachometer\",\r\n   \"Talk\",\r\n   \"Taxi\",\r\n   \"Teacher\",\r\n   \"Teapot\",\r\n   \"Teenager\",\r\n   \"Telephone\",\r\n   \"Ten\",\r\n   \"Tennis\",\r\n   \"Thief\",\r\n   \"Think\",\r\n   \"Throne\",\r\n   \"Through\",\r\n   \"Thunder\",\r\n   \"Tide\",\r\n   \"Tiger\",\r\n   \"Time\",\r\n   \"Tinting\",\r\n   \"Tiptoe\",\r\n   \"Tiptop\",\r\n   \"Tired\",\r\n   \"Tissue\",\r\n   \"Toast\",\r\n   \"Toilet\",\r\n   \"Tool\",\r\n   \"Toothbrush\",\r\n   \"Tornado\",\r\n   \"Tournament\",\r\n   \"Tractor\",\r\n   \"Train\",\r\n   \"Trash\",\r\n   \"Treasure\",\r\n   \"Tree\",\r\n   \"Triangle\",\r\n   \"Trip\",\r\n   \"Truck\",\r\n   \"Tub\",\r\n   \"Tuba\",\r\n   \"Tutor\",\r\n   \"Television\",\r\n   \"Twang\",\r\n   \"Twig\",\r\n   \"Twitterpated\",\r\n   \"Type\",\r\n   \"Unemployed\",\r\n   \"Upgrade\",\r\n   \"Vest\",\r\n   \"Vision\",\r\n   \"Wag\",\r\n   \"Water\",\r\n   \"Watermelon\",\r\n   \"Wax\",\r\n   \"Wedding\",\r\n   \"Weed\",\r\n   \"Welder\",\r\n   \"Whatever\",\r\n   \"Wheelchair\",\r\n   \"Whiplash\",\r\n   \"Whisk\",\r\n   \"Whistle\",\r\n   \"White\",\r\n   \"Wig\",\r\n   \"Will\",\r\n   \"Windmill\",\r\n   \"Winter\",\r\n   \"Wish\",\r\n   \"Wolf\",\r\n   \"Wool\",\r\n   \"World\",\r\n   \"Worm\",\r\n   \"Wristwatch\",\r\n   \"Yardstick\",\r\n   \"Zamboni\",\r\n   \"Zen\",\r\n   \"Zero\",\r\n   \"Zipper\",\r\n   \"Zone\",\r\n   \"Zoo\",\r\n];","export enum eCardType { RedSpy, BlueSpy, Neutral, Assassin}\r\n"]}